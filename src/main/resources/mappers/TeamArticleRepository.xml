<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.example.repository.TeamArticleRepository">

    <insert id="writeArticle" parameterType="map">
        INSERT INTO teamArticle
        SET
            regDate = NOW(),
        updateDate = NOW(),
        memberId = #{memberId},
            teamId = #{teamId},
            title = #{title},
            `body` = #{body},
            area = #{area}
    </insert>

    <delete id="deleteArticle" parameterType="int">
        DELETE FROM teamArticle
        WHERE id = #{id}
    </delete>

    <update id="modifyArticle" parameterType="map">
        UPDATE teamArticle
        SET
            title = #{title},
            body = #{body},
            updateDate = NOW()
        WHERE id = #{id}
    </update>


    <update id="increaseHitCount" parameterType="int">
        UPDATE teamArticle
        SET
            hitCount = hitCount + 1
        WHERE id = #{id}
    </update>

    <update id="increaseGoodReactionPoint" parameterType="int">
        UPDATE
            teamArticle
        SET
            goodReactionPoint = goodReactionPoint + 1
        WHERE id = #{relId}
    </update>

    <update id="decreaseGoodReactionPoint" parameterType="int">
        UPDATE
            teamArticle
        SET goodReactionPoint = goodReactionPoint - 1
        WHERE id =
              #{relId}
    </update>

    <update id="increaseBadReactionPoint" parameterType="int">
        UPDATE
            teamArticle
        SET badReactionPoint = badReactionPoint + 1
        WHERE id = #{relId}
    </update>

    <update id="decreaseBadReactionPoint" parameterType="int">
        UPDATE
            teamArticle
        SET badReactionPoint = badReactionPoint - 1
        WHERE id = #{relId}
    </update>



    <select id="getArticleCount" parameterType="int">
        SELECT COUNT(*) , M.nickname AS extra__writer
        FROM teamArticle AS A
        INNER
        JOIN `member` AS M
        ON A.memberId = M.id
        WHERE 1

        <if test="searchKeyword != ''">
            <choose>
                <when test="searchKeywordTypeCode == 'title'">
                    AND A.title LIKE CONCAT('%', #{searchKeyword}, '%')
                </when>
                <when test="searchKeywordTypeCode == 'body'">
                    AND A.`body` LIKE CONCAT('%', #{searchKeyword}, '%')
                </when>
                <when test="searchKeywordTypeCode == 'nickname'">
                    AND M.nickname LIKE CONCAT('%', #{searchKeyword},
                    '%')
                </when>
                <otherwise>
                    AND A.title LIKE CONCAT('%', #{searchKeyword}, '%')
                    OR
                    A.`body` LIKE CONCAT('%', #{searchKeyword}, '%')
                </otherwise>
            </choose>
        </if>
    </select>

    <select id="getLastInsertId" parameterType="int">
        SELECT
            LAST_INSERT_ID()
    </select>


    <select id="getForPrintArticle" parameterType="int"
            resultType="org.example.vo.TeamArticle">
        SELECT
            A.*,
            M.nickname AS extra__writer,
            T.teamName AS teamName,
            T.teamRank AS teamRank,
            T.area AS area
        FROM teamArticle AS A
                 INNER JOIN `member` AS M ON A.memberId = M.id
                 LEFT JOIN `team` AS T ON A.teamId = T.id
        WHERE A.id = #{id}
    </select>


    <select id="getArticleById" parameterType="int"
            resultType="org.example.vo.TeamArticle">
        SELECT *
        FROM teamArticle
        WHERE id =#{id}
    </select>

    <select id="getForPrintArticles"
            resultType="org.example.vo.TeamArticle">
        SELECT
        A.*,
        M.nickname AS extra__writer,
        IFNULL(COUNT(R.id), 0) AS extra__repliesCount,
        T.teamName AS teamName,
        T.teamRank AS teamRank,
        T.area AS area
        FROM teamArticle AS A
        INNER JOIN `member` AS M ON A.memberId = M.id
        LEFT JOIN `reply` AS R ON A.id = R.relId
        LEFT JOIN `team` AS T ON A.teamId = T.id
        WHERE 1
        <if test="searchKeyword != ''">
            <choose>
                <when test="searchKeywordTypeCode == 'title'">
                    AND A.title LIKE CONCAT('%', #{searchKeyword}, '%')
                </when>
                <when test="searchKeywordTypeCode == 'body'">
                    AND A.`body` LIKE CONCAT('%', #{searchKeyword}, '%')
                </when>
                <when test="searchKeywordTypeCode == 'nickname'">
                    AND M.nickname LIKE CONCAT('%', #{searchKeyword}, '%')
                </when>
                <otherwise>
                    AND (
                    A.title LIKE CONCAT('%', #{searchKeyword}, '%')
                    OR A.`body` LIKE CONCAT('%', #{searchKeyword}, '%')
                    )
                </otherwise>
            </choose>
        </if>

        <if test="area != ''">
            AND T.area = #{area}
        </if>

        GROUP BY A.id
        ORDER BY A.id DESC
        <if test="limitFrom >= 0">
            LIMIT #{limitFrom}, #{limitTake}
        </if>
    </select>



    <select id="getArticles"
            resultType="org.example.vo.TeamArticle">
        SELECT A.*, M.nickname AS extra__writer
        FROM teamArticle AS A
                 INNER JOIN `member` AS M
                            ON A.memberId = M.id
        ORDER BY A.id
                DESC
    </select>

    <select id="getTeamByName" parameterType="string" resultType="org.example.vo.Team">
        SELECT *
        FROM team
        WHERE teamName = #{teamName}
    </select>


</mapper>